{"ast":null,"code":"import { of, throwError } from 'rxjs';\nimport { delay, catchError, tap } from 'rxjs/operators';\nimport { movies } from '../models/movie.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let MovieService = /*#__PURE__*/(() => {\n  class MovieService {\n    constructor(http) {\n      this.http = http;\n      this.moviesTopURL = 'http://www.mocky.io/v2/5dc3c053300000540034757b';\n      this.moviesURL = \"http://localhost:3000/movies\";\n    }\n    getMovies() {\n      return of(movies);\n    }\n    getTopMovies() {\n      return this.http.get(this.moviesTopURL).pipe(this.addDelay);\n    }\n    getMoviesURL() {\n      return this.http.get(this.moviesURL).pipe(this.addDelay);\n    }\n    movie(id) {\n      console.log(id);\n      return of(movies.find(movie => +movie.id === +id));\n    }\n    getMoviesId(id) {\n      return this.http.get(`${this.moviesURL}/${id}`);\n    }\n    addMovie(movie) {\n      return this.http.post(this.moviesURL, movie);\n    }\n    removeMovie(id) {\n      return this.http.delete(`${this.moviesURL}/${id}`).pipe(tap(status => console.log(\"status: \" + status)), catchError(this.handleError));\n    }\n    addDelay(obs) {\n      return obs.pipe(delay(1000));\n    }\n    handleError(error) {\n      console.error(error);\n      return throwError(error);\n    }\n    static #_ = this.ɵfac = function MovieService_Factory(t) {\n      return new (t || MovieService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: MovieService,\n      factory: MovieService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return MovieService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}